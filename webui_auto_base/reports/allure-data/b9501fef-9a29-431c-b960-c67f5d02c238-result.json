{"name": "test_login[datayaml3]", "status": "broken", "statusDetails": {"message": "TypeError: argument of type 'Service' is not iterable", "trace": "@pytest.fixture(scope=\"session\")\n    def setup_teardown():\n>   \tdriver = webdriver.Chrome(executable_path=ChromeService)\n\n..\\conftest.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:73: in __init__\n    service_log_path, service, keep_alive)\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:90: in __init__\n    self.service.start()\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\common\\service.py:76: in start\n    creationflags=self.creationflags)\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\subprocess.py:800: in __init__\n    restore_signals, start_new_session)\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\subprocess.py:1148: in _execute_child\n    args = list2cmdline(args)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nseq = [<selenium.webdriver.chrome.service.Service object at 0x0C469DD0>, '--port=64197']\n\n    def list2cmdline(seq):\n        \"\"\"\n        Translate a sequence of arguments into a command line\n        string, using the same rules as the MS C runtime:\n    \n        1) Arguments are delimited by white space, which is either a\n           space or a tab.\n    \n        2) A string surrounded by double quotation marks is\n           interpreted as a single argument, regardless of white space\n           contained within.  A quoted string can be embedded in an\n           argument.\n    \n        3) A double quotation mark preceded by a backslash is\n           interpreted as a literal double quotation mark.\n    \n        4) Backslashes are interpreted literally, unless they\n           immediately precede a double quotation mark.\n    \n        5) If backslashes immediately precede a double quotation mark,\n           every pair of backslashes is interpreted as a literal\n           backslash.  If the number of backslashes is odd, the last\n           backslash escapes the next double quotation mark as\n           described in rule 3.\n        \"\"\"\n    \n        # See\n        # http://msdn.microsoft.com/en-us/library/17w5ykft.aspx\n        # or search http://msdn.microsoft.com for\n        # \"Parsing C++ Command-Line Arguments\"\n        result = []\n        needquote = False\n        for arg in seq:\n            bs_buf = []\n    \n            # Add a space to separate this argument from the others\n            if result:\n                result.append(' ')\n    \n>           needquote = (\" \" in arg) or (\"\\t\" in arg) or not arg\nE           TypeError: argument of type 'Service' is not iterable\n\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\subprocess.py:555: TypeError"}, "description": "\n        登录测试\n        :param datayaml: 加载login_data登录测试数据\n        :return:\n        ", "parameters": [{"name": "datayaml", "value": "{'id': 'test_login001.4', 'detail': '用户名或密码不匹配', 'screenshot': 'pawd_error', 'data': {'username': 13511112222, 'password': 'aa'}, 'check': ['用户名或密码错误']}"}], "start": 1678461096783, "stop": 1678461096783, "uuid": "0c873523-63c6-4827-b9cf-d8786136cbf2", "historyId": "37fb25b22ee0c525c394a79b03eefb21", "testCaseId": "95f7d5ffd6555b9dfe3d54dca0579a7a", "fullName": "testcases.test_login.TestUIAUTO#test_login", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestUIAUTO"}, {"name": "host", "value": "瑛智的工作电脑"}, {"name": "thread", "value": "18992-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_login"}]}