{"name": "test_login[datayaml3]", "status": "broken", "statusDetails": {"message": "NameError: name 'REPORTS_DIR' is not defined", "trace": "self = <test_login.TestUIAUTO object at 0x0EB97E70>\ndatayaml = {'check': ['用户名或密码错误'], 'data': {'password': 'aa', 'username': 13511112222}, 'detail': '用户名或密码不匹配', 'id': 'test_login001.4', ...}\nsetup_teardown = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a7befe8694a4acc97fa5f7beb504b842\")>\nassert_utils = <utils.assert_utils.AssertUtils object at 0x0EC48A90>\n\n    @pytest.mark.parametrize(\"datayaml\", testData)\n    def test_login(self,datayaml,setup_teardown,assert_utils):\n        \"\"\"\n        登录测试\n        :param datayaml: 加载login_data登录测试数据\n        :return:\n        \"\"\"\n        driver = setup_teardown\n        url = test_url\n        logging.info(\"当前执行测试用例ID-> {0} ; 测试点-> {1}\".format(datayaml['id'],datayaml['detail']))\n        # 调用登录方法\n        self.user_login_verify(datayaml['data']['username'],datayaml['data']['password'],driver,url)\n        po = login(driver,test_url)\n        if datayaml['screenshot'] == 'user_pawd_success':\n            logging.info(\"检查点-> {0}\".format(po.user_login_success_hint()))\n            assert_utils.assert_equal(po.user_login_success_hint(), datayaml['check'][0], \"成功登录，返回实际结果是->: {0}\".format(po.user_login_success_hint()))\n            logging.info(\"成功登录，返回实际结果是->: {0}\".format(po.user_login_success_hint()))\n            driver.get_screenshot_as_file(str(REPORTS_DIR) + \"/screenshot/{0}.png\".format(datayaml['screenshot']))\n        elif datayaml['screenshot'] == 'user_pawd_empty':\n            logging.info(\"检查点-> {0}\".format(po.user_error_hint()))\n            assert_utils.assert_equal(po.user_error_hint(),datayaml['check'][0] , \"异常登录，返回实际结果是->: {0}\".format(po.user_error_hint()))\n            logging.info(\"异常登录，返回实际结果是->: {0}\".format(po.user_error_hint()))\n            driver.get_screenshot_as_file(str(REPORTS_DIR) + \"/screenshot\\{0}.png\".format(datayaml['screenshot']))\n        elif datayaml['screenshot'] == 'user_empty':\n            logging.info(\"检查点-> {0}\".format(po.user_error_hint()))\n            assert_utils.assert_equal(po.user_error_hint(),datayaml['check'][0] , \"异常登录，返回实际结果是->: {0}\".format(po.user_error_hint()))\n            logging.info(\"异常登录，返回实际结果是->: {0}\".format(po.user_error_hint()))\n            driver.get_screenshot_as_file(str(REPORTS_DIR) + \"/screenshot\\{0}.png\".format(datayaml['screenshot']))\n        elif datayaml['screenshot'] == 'pawd_empty':\n            logging.info(\"检查点-> {0}\".format(po.pwd_error_hint()))\n            assert_utils.assert_equal(po.pwd_error_hint(),datayaml['check'][0] , \"异常登录，返回实际结果是->: {0}\".format(po.pwd_error_hint()))\n            logging.info(\"异常登录，返回实际结果是->: {0}\".format(po.pwd_error_hint()))\n            driver.get_screenshot_as_file(str(REPORTS_DIR) + \"/screenshot\\{0}.png\".format(datayaml['screenshot']))\n        elif datayaml['screenshot'] == 'pawd_error':\n            logging.info(\"检查点-> {0}\".format(po.user_or_pwd_hint()))\n            assert_utils.assert_equal(po.user_or_pwd_hint(),datayaml['check'][0] , \"异常登录，返回实际结果是->: {0}\".format(po.user_or_pwd_hint()))\n            logging.info(\"异常登录，返回实际结果是->: {0}\".format(po.user_or_pwd_hint()))\n>           driver.get_screenshot_as_file(str(REPORTS_DIR) + \"/screenshot\\{0}.png\".format(datayaml['screenshot']))\nE           NameError: name 'REPORTS_DIR' is not defined\n\ntest_login.py:63: NameError"}, "description": "\n        登录测试\n        :param datayaml: 加载login_data登录测试数据\n        :return:\n        ", "attachments": [{"name": "log", "source": "60b8de64-1787-47c8-9311-5c6d524c7335-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "datayaml", "value": "{'id': 'test_login001.4', 'detail': '用户名或密码不匹配', 'screenshot': 'pawd_error', 'data': {'username': 13511112222, 'password': 'aa'}, 'check': ['用户名或密码错误']}"}], "start": 1678461548425, "stop": 1678461555667, "uuid": "c1a8d92b-5ce4-467a-a59e-9759a929507d", "historyId": "37fb25b22ee0c525c394a79b03eefb21", "testCaseId": "95f7d5ffd6555b9dfe3d54dca0579a7a", "fullName": "testcases.test_login.TestUIAUTO#test_login", "labels": [{"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestUIAUTO"}, {"name": "host", "value": "瑛智的工作电脑"}, {"name": "thread", "value": "76100-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_login"}]}