{
  "uid" : "410c58efa0ea3905",
  "name" : "test_login[datayaml0]",
  "fullName" : "testcases.test_login.TestUIAUTO#test_login",
  "historyId" : "be3c0912d8934b2a3e45e1a81a612db7",
  "time" : {
    "start" : 1678460784267,
    "stop" : 1678460784267,
    "duration" : 0
  },
  "description" : "\n        登录测试\n        :param datayaml: 加载login_data登录测试数据\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    登录测试\n    :param datayaml: 加载login_data登录测试数据\n    :return:\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 109\nCurrent browser version is 111.0.5563.64 with binary path C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\nStacktrace:\nBacktrace:\n\t(No symbol) [0x01146643]\n\t(No symbol) [0x010DBE21]\n\t(No symbol) [0x00FDDA9D]\n\t(No symbol) [0x01002911]\n\t(No symbol) [0x00FFD630]\n\t(No symbol) [0x00FFA899]\n\t(No symbol) [0x01036917]\n\t(No symbol) [0x0103655C]\n\t(No symbol) [0x0102FB76]\n\t(No symbol) [0x010049C1]\n\t(No symbol) [0x01005E5D]\n\tGetHandleVerifier [0x013BA142+2497106]\n\tGetHandleVerifier [0x013E85D3+2686691]\n\tGetHandleVerifier [0x013EBB9C+2700460]\n\tGetHandleVerifier [0x011F3B10+635936]\n\t(No symbol) [0x010E4A1F]\n\t(No symbol) [0x010EA418]\n\t(No symbol) [0x010EA505]\n\t(No symbol) [0x010F508B]\n\tBaseThreadInitThunk [0x765D6BD9+25]\n\tRtlGetFullPathName_UEx [0x77D08FD2+1218]\n\tRtlGetFullPathName_UEx [0x77D08F9D+1165]",
  "statusTrace" : "@pytest.fixture(scope=\"session\")\n    def setup_teardown():\n>   \tdriver = webdriver.Chrome()\n\n..\\conftest.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:73: in __init__\n    service_log_path, service, keep_alive)\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:99: in __init__\n    options=options)\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:269: in __init__\n    self.start_session(capabilities, browser_profile)\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:360: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:425: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0EB1C630>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...unk [0x765D6BD9+25]\\\\n\\\\tRtlGetFullPathName_UEx [0x77D08FD2+1218]\\\\n\\\\tRtlGetFullPathName_UEx [0x77D08F9D+1165]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 109\nE       Current browser version is 111.0.5563.64 with binary path C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x01146643]\nE       \t(No symbol) [0x010DBE21]\nE       \t(No symbol) [0x00FDDA9D]\nE       \t(No symbol) [0x01002911]\nE       \t(No symbol) [0x00FFD630]\nE       \t(No symbol) [0x00FFA899]\nE       \t(No symbol) [0x01036917]\nE       \t(No symbol) [0x0103655C]\nE       \t(No symbol) [0x0102FB76]\nE       \t(No symbol) [0x010049C1]\nE       \t(No symbol) [0x01005E5D]\nE       \tGetHandleVerifier [0x013BA142+2497106]\nE       \tGetHandleVerifier [0x013E85D3+2686691]\nE       \tGetHandleVerifier [0x013EBB9C+2700460]\nE       \tGetHandleVerifier [0x011F3B10+635936]\nE       \t(No symbol) [0x010E4A1F]\nE       \t(No symbol) [0x010EA418]\nE       \t(No symbol) [0x010EA505]\nE       \t(No symbol) [0x010F508B]\nE       \tBaseThreadInitThunk [0x765D6BD9+25]\nE       \tRtlGetFullPathName_UEx [0x77D08FD2+1218]\nE       \tRtlGetFullPathName_UEx [0x77D08F9D+1165]\n\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: SessionNotCreatedException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1678460784267,
      "stop" : 1678460784376,
      "duration" : 109
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "setup_teardown",
    "time" : {
      "start" : 1678460784376,
      "stop" : 1678460787536,
      "duration" : 3160
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 109\nCurrent browser version is 111.0.5563.64 with binary path C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\nStacktrace:\nBacktrace:\n\t(No symbol) [0x01146643]\n\t(No symbol) [0x010DBE21]\n\t(No symbol) [0x00FDDA9D]\n\t(No symbol) [0x01002911]\n\t(No symbol) [0x00FFD630]\n\t(No symbol) [0x00FFA899]\n\t(No symbol) [0x01036917]\n\t(No symbol) [0x0103655C]\n\t(No symbol) [0x0102FB76]\n\t(No symbol) [0x010049C1]\n\t(No symbol) [0x01005E5D]\n\tGetHandleVerifier [0x013BA142+2497106]\n\tGetHandleVerifier [0x013E85D3+2686691]\n\tGetHandleVerifier [0x013EBB9C+2700460]\n\tGetHandleVerifier [0x011F3B10+635936]\n\t(No symbol) [0x010E4A1F]\n\t(No symbol) [0x010EA418]\n\t(No symbol) [0x010EA505]\n\t(No symbol) [0x010F508B]\n\tBaseThreadInitThunk [0x765D6BD9+25]\n\tRtlGetFullPathName_UEx [0x77D08FD2+1218]\n\tRtlGetFullPathName_UEx [0x77D08F9D+1165]\n\n",
    "statusTrace" : "  File \"C:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\pluggy\\_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\_pytest\\fixtures.py\", line 1111, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"C:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\_pytest\\fixtures.py\", line 883, in call_fixture_func\n    fixture_result = next(generator)\n  File \"D:\\python_Code\\pythonProject\\pythonclasses\\one\\day04\\webui_auto_base\\conftest.py\", line 30, in setup_teardown\n    driver = webdriver.Chrome()\n  File \"C:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py\", line 73, in __init__\n    service_log_path, service, keep_alive)\n  File \"C:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py\", line 99, in __init__\n    options=options)\n  File \"C:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 269, in __init__\n    self.start_session(capabilities, browser_profile)\n  File \"C:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 360, in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\n  File \"C:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 425, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 247, in check_response\n    raise exception_class(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true
  } ],
  "testStage" : {
    "description" : "\n        登录测试\n        :param datayaml: 加载login_data登录测试数据\n        :return:\n        ",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 109\nCurrent browser version is 111.0.5563.64 with binary path C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\nStacktrace:\nBacktrace:\n\t(No symbol) [0x01146643]\n\t(No symbol) [0x010DBE21]\n\t(No symbol) [0x00FDDA9D]\n\t(No symbol) [0x01002911]\n\t(No symbol) [0x00FFD630]\n\t(No symbol) [0x00FFA899]\n\t(No symbol) [0x01036917]\n\t(No symbol) [0x0103655C]\n\t(No symbol) [0x0102FB76]\n\t(No symbol) [0x010049C1]\n\t(No symbol) [0x01005E5D]\n\tGetHandleVerifier [0x013BA142+2497106]\n\tGetHandleVerifier [0x013E85D3+2686691]\n\tGetHandleVerifier [0x013EBB9C+2700460]\n\tGetHandleVerifier [0x011F3B10+635936]\n\t(No symbol) [0x010E4A1F]\n\t(No symbol) [0x010EA418]\n\t(No symbol) [0x010EA505]\n\t(No symbol) [0x010F508B]\n\tBaseThreadInitThunk [0x765D6BD9+25]\n\tRtlGetFullPathName_UEx [0x77D08FD2+1218]\n\tRtlGetFullPathName_UEx [0x77D08F9D+1165]",
    "statusTrace" : "@pytest.fixture(scope=\"session\")\n    def setup_teardown():\n>   \tdriver = webdriver.Chrome()\n\n..\\conftest.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:73: in __init__\n    service_log_path, service, keep_alive)\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:99: in __init__\n    options=options)\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:269: in __init__\n    self.start_session(capabilities, browser_profile)\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:360: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:425: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0EB1C630>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created: This version of Chro...unk [0x765D6BD9+25]\\\\n\\\\tRtlGetFullPathName_UEx [0x77D08FD2+1218]\\\\n\\\\tRtlGetFullPathName_UEx [0x77D08F9D+1165]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created: This version of ChromeDriver only supports Chrome version 109\nE       Current browser version is 111.0.5563.64 with binary path C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\nE       Stacktrace:\nE       Backtrace:\nE       \t(No symbol) [0x01146643]\nE       \t(No symbol) [0x010DBE21]\nE       \t(No symbol) [0x00FDDA9D]\nE       \t(No symbol) [0x01002911]\nE       \t(No symbol) [0x00FFD630]\nE       \t(No symbol) [0x00FFA899]\nE       \t(No symbol) [0x01036917]\nE       \t(No symbol) [0x0103655C]\nE       \t(No symbol) [0x0102FB76]\nE       \t(No symbol) [0x010049C1]\nE       \t(No symbol) [0x01005E5D]\nE       \tGetHandleVerifier [0x013BA142+2497106]\nE       \tGetHandleVerifier [0x013E85D3+2686691]\nE       \tGetHandleVerifier [0x013EBB9C+2700460]\nE       \tGetHandleVerifier [0x011F3B10+635936]\nE       \t(No symbol) [0x010E4A1F]\nE       \t(No symbol) [0x010EA418]\nE       \t(No symbol) [0x010EA505]\nE       \t(No symbol) [0x010F508B]\nE       \tBaseThreadInitThunk [0x765D6BD9+25]\nE       \tRtlGetFullPathName_UEx [0x77D08FD2+1218]\nE       \tRtlGetFullPathName_UEx [0x77D08F9D+1165]\n\nC:\\Users\\syz\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: SessionNotCreatedException",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "f9d0cb151ffb3c53",
      "name" : "log",
      "source" : "f9d0cb151ffb3c53.txt",
      "type" : "text/plain",
      "size" : 5247
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcases"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestUIAUTO"
  }, {
    "name" : "host",
    "value" : "瑛智的工作电脑"
  }, {
    "name" : "thread",
    "value" : "19208-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "datayaml",
    "value" : "{'id': 'test_login001.1', 'detail': '用户名和密码为空登录', 'screenshot': 'user_pawd_empty', 'data': {'username': '', 'password': ''}, 'check': ['请输入账户名']}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "410c58efa0ea3905.json",
  "parameterValues" : [ "{'id': 'test_login001.1', 'detail': '用户名和密码为空登录', 'screenshot': 'user_pawd_empty', 'data': {'username': '', 'password': ''}, 'check': ['请输入账户名']}" ]
}