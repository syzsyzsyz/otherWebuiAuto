{
  "uid" : "e0161b5de64237ef",
  "name" : "test_login[datayaml0]",
  "fullName" : "testcases.test_login.TestUIAUTO#test_login",
  "historyId" : "be3c0912d8934b2a3e45e1a81a612db7",
  "time" : {
    "start" : 1678461526034,
    "stop" : 1678461533628,
    "duration" : 7594
  },
  "description" : "\n        登录测试\n        :param datayaml: 加载login_data登录测试数据\n        :return:\n        ",
  "descriptionHtml" : "<pre><code>    登录测试\n    :param datayaml: 加载login_data登录测试数据\n    :return:\n</code></pre>\n",
  "status" : "broken",
  "statusMessage" : "NameError: name 'REPORTS_DIR' is not defined",
  "statusTrace" : "self = <test_login.TestUIAUTO object at 0x0EB97C50>\ndatayaml = {'check': ['请输入账户名'], 'data': {'password': '', 'username': ''}, 'detail': '用户名和密码为空登录', 'id': 'test_login001.1', ...}\nsetup_teardown = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a7befe8694a4acc97fa5f7beb504b842\")>\nassert_utils = <utils.assert_utils.AssertUtils object at 0x0EC48210>\n\n    @pytest.mark.parametrize(\"datayaml\", testData)\n    def test_login(self,datayaml,setup_teardown,assert_utils):\n        \"\"\"\n        登录测试\n        :param datayaml: 加载login_data登录测试数据\n        :return:\n        \"\"\"\n        driver = setup_teardown\n        url = test_url\n        logging.info(\"当前执行测试用例ID-> {0} ; 测试点-> {1}\".format(datayaml['id'],datayaml['detail']))\n        # 调用登录方法\n        self.user_login_verify(datayaml['data']['username'],datayaml['data']['password'],driver,url)\n        po = login(driver,test_url)\n        if datayaml['screenshot'] == 'user_pawd_success':\n            logging.info(\"检查点-> {0}\".format(po.user_login_success_hint()))\n            assert_utils.assert_equal(po.user_login_success_hint(), datayaml['check'][0], \"成功登录，返回实际结果是->: {0}\".format(po.user_login_success_hint()))\n            logging.info(\"成功登录，返回实际结果是->: {0}\".format(po.user_login_success_hint()))\n            driver.get_screenshot_as_file(str(REPORTS_DIR) + \"/screenshot/{0}.png\".format(datayaml['screenshot']))\n        elif datayaml['screenshot'] == 'user_pawd_empty':\n            logging.info(\"检查点-> {0}\".format(po.user_error_hint()))\n            assert_utils.assert_equal(po.user_error_hint(),datayaml['check'][0] , \"异常登录，返回实际结果是->: {0}\".format(po.user_error_hint()))\n            logging.info(\"异常登录，返回实际结果是->: {0}\".format(po.user_error_hint()))\n>           driver.get_screenshot_as_file(str(REPORTS_DIR) + \"/screenshot\\{0}.png\".format(datayaml['screenshot']))\nE           NameError: name 'REPORTS_DIR' is not defined\n\ntest_login.py:48: NameError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1678461523978,
      "stop" : 1678461524087,
      "duration" : 109
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "setup_teardown",
    "time" : {
      "start" : 1678461524087,
      "stop" : 1678461526019,
      "duration" : 1932
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  }, {
    "name" : "assert_utils",
    "time" : {
      "start" : 1678461526019,
      "stop" : 1678461526019,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "description" : "\n        登录测试\n        :param datayaml: 加载login_data登录测试数据\n        :return:\n        ",
    "status" : "broken",
    "statusMessage" : "NameError: name 'REPORTS_DIR' is not defined",
    "statusTrace" : "self = <test_login.TestUIAUTO object at 0x0EB97C50>\ndatayaml = {'check': ['请输入账户名'], 'data': {'password': '', 'username': ''}, 'detail': '用户名和密码为空登录', 'id': 'test_login001.1', ...}\nsetup_teardown = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a7befe8694a4acc97fa5f7beb504b842\")>\nassert_utils = <utils.assert_utils.AssertUtils object at 0x0EC48210>\n\n    @pytest.mark.parametrize(\"datayaml\", testData)\n    def test_login(self,datayaml,setup_teardown,assert_utils):\n        \"\"\"\n        登录测试\n        :param datayaml: 加载login_data登录测试数据\n        :return:\n        \"\"\"\n        driver = setup_teardown\n        url = test_url\n        logging.info(\"当前执行测试用例ID-> {0} ; 测试点-> {1}\".format(datayaml['id'],datayaml['detail']))\n        # 调用登录方法\n        self.user_login_verify(datayaml['data']['username'],datayaml['data']['password'],driver,url)\n        po = login(driver,test_url)\n        if datayaml['screenshot'] == 'user_pawd_success':\n            logging.info(\"检查点-> {0}\".format(po.user_login_success_hint()))\n            assert_utils.assert_equal(po.user_login_success_hint(), datayaml['check'][0], \"成功登录，返回实际结果是->: {0}\".format(po.user_login_success_hint()))\n            logging.info(\"成功登录，返回实际结果是->: {0}\".format(po.user_login_success_hint()))\n            driver.get_screenshot_as_file(str(REPORTS_DIR) + \"/screenshot/{0}.png\".format(datayaml['screenshot']))\n        elif datayaml['screenshot'] == 'user_pawd_empty':\n            logging.info(\"检查点-> {0}\".format(po.user_error_hint()))\n            assert_utils.assert_equal(po.user_error_hint(),datayaml['check'][0] , \"异常登录，返回实际结果是->: {0}\".format(po.user_error_hint()))\n            logging.info(\"异常登录，返回实际结果是->: {0}\".format(po.user_error_hint()))\n>           driver.get_screenshot_as_file(str(REPORTS_DIR) + \"/screenshot\\{0}.png\".format(datayaml['screenshot']))\nE           NameError: name 'REPORTS_DIR' is not defined\n\ntest_login.py:48: NameError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a03a080265c14361",
      "name" : "log",
      "source" : "a03a080265c14361.txt",
      "type" : "text/plain",
      "size" : 386814
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ {
    "name" : "setup_teardown::0",
    "time" : {
      "start" : 1678461562849,
      "stop" : 1678461562974,
      "duration" : 125
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcases"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestUIAUTO"
  }, {
    "name" : "host",
    "value" : "瑛智的工作电脑"
  }, {
    "name" : "thread",
    "value" : "76100-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcases.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "datayaml",
    "value" : "{'id': 'test_login001.1', 'detail': '用户名和密码为空登录', 'screenshot': 'user_pawd_empty', 'data': {'username': '', 'password': ''}, 'check': ['请输入账户名']}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "e0161b5de64237ef.json",
  "parameterValues" : [ "{'id': 'test_login001.1', 'detail': '用户名和密码为空登录', 'screenshot': 'user_pawd_empty', 'data': {'username': '', 'password': ''}, 'check': ['请输入账户名']}" ]
}